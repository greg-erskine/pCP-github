#!/bin/sh

#========================================================================================
# Bluetooth Speaker Connect Daemon
#----------------------------------------------------------------------------------------
#
# Version: 3.5.0 2017-12-31 PH
#	Original
#
#----------------------------------------------------------------------------------------

BTDEVICE=""
BTDELAY=""
DISCONNECTED=1
MSGCNT=0

[ "$1" = "boot" ] && BOOT=1 || BOOT=0

. /usr/local/bin/pcp-bt-functions

if [ ! -f $BTDEVICECONF ]; then
	echo "Need to pair device. \n Please run pcp-bt-pair"  >> $BT_LOG
	exit 1
fi
if [ "$BTDEVICE" = "" -a "$BTDELAY" = "" ]; then
	echo "Need to pair device. \n Please run pcp-bt-pair" >> $BT_LOG
	exit 1
fi

connect() {
	RET=$(pcp_bt_connect_device)
	case $RET in
		0) echo "Device $BTDEVICE Connected" >> $BT_LOG
			MSGCNT=0
			return 0
		;;
		1) [ $MSGCNT -eq 0 ] && echo "Device $BTDEVICE could not connect" >> $BT_LOG
			MSGCNT=$((MSGCNT+1))
			[ $MSGCNT -eq 2 ] && echo "Last message repeated $MSGCNT times." >> $BT_LOG
			if [ $MSGCNT -ge 3 ]; then
				[ `expr $MSGCNT % 10` -eq 0 ] && sed -r -i "$ s/[0-9]+/$MSGCNT/" $BT_LOG
			fi
			return 1
		;;
	esac
}

verify_sqzlt() {
	$SQZLT_INITD status >>$BT_LOG
	if [ $? -ne 0 ]; then
		$SQZLT_INITD restart >>$BT_LOG
		$SQZLT_INITD status >>$BT_LOG
	fi
}

DONE=0
until [ $DONE -eq 1 ]; do
	#Verify device is still connected
	[ $DISCONNECTED -eq 0 ] && DISCONNECTED=$(pcp_bt_device_connected)
	#If disconnected, then try to reconnect. If connected, sleep for 30 sec
	if [ $DISCONNECTED -eq 1 ]; then
		connect
		if [ $? -eq 0 ]; then
			DISCONNECTED=0
			sleep 4
			#Skip this on boot, as pCP will be handling this during bootup.
			[ $BOOT -ne 1 ] && verify_sqzlt
			sleep 30
		else
			sleep 5
		fi
	else
		sleep 30
	fi
	BOOT=0
done
