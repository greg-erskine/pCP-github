#!/bin/sh

# Version: 7.0.0 2020-05-27

#========================================================================================
# piCorePlayer log files should be located in the $LOGDIR directory (default /var/log).
#
# Log filenames need to be formatted correctly:
#  - start with "pcp_"
#  - end in ".log"
#
# i.e. pcp_diagnostics.log
#
# Note:
#  LMS log filenames do not follow this standard and are located in /var/log/slimserver.
#----------------------------------------------------------------------------------------

. pcp-functions
. pcp-lms-functions
. pcp-pastebin-functions

pcp_html_head "Show pCP log files" "GE"

pcp_controls
pcp_diagnostics
pcp_httpd_query_string

COLUMN2_1="col-3"
COLUMN2_2="col-9"

#========================================================================================
# Copy log files from persistent locations to $LOGDIR directory
#----------------------------------------------------------------------------------------
pcp_mount_bootpart >/dev/null 2>&1
cp ${BOOTMNT}/pcp_*.log $LOGDIR >/dev/null 2>&1
pcp_umount_bootpart >/dev/null 2>&1
cp ${TCEMNT}/tce/pcp_*.log $LOGDIR >/dev/null 2>&1
#----------------------------------------------------------------------------------------

#========================================================================================
# Create additional log files
#----------------------------------------------------------------------------------------
dmesg > ${LOGDIR}/pcp_dmesg.log
pcp_lms_players "squeezelite" "pCP" | sed 's/,/ - /g' | sort > ${LOGDIR}/pcp_squeezelite_ip.log
${SQLT_BIN} -h > ${LOGDIR}/pcp_squeezelite_help.log
${SQLT_BIN} -t > ${LOGDIR}/pcp_squeezelite_license.log
cat /usr/local/etc/pcp/pcp.cfg > ${LOGDIR}/pcp_pcp_configuration.log
#----------------------------------------------------------------------------------------

PCPLOGS=$(ls "$LOGDIR" | grep pcp_ | grep log)
[ x"" != x"$PCPLOGS" ] && LOGS=$PCPLOGS

CWD=$(pwd)
LMSLOGS=$(cd "${LOGDIR}"; ls slimserver/*.log)
cd $CWD
[ x"" != x"$LMSLOGS" ] && LOGS=${LOGS}" "$LMSLOGS
[ x"" = x"$LOGS" ] && FIRST="No log files found." || FIRST="All"

pcp_debug_variables "html" QUERY_STRING SELECTION ACTION LOGDIR BOOTMNT TCEMNT PCPLOGS LMSLOGS LOGS

#========================================================================================
# Log selection form
#----------------------------------------------------------------------------------------
pcp_border_begin
pcp_heading5 "Log file operations"
echo '  <form name="log" action="'$0'" method="get">'
#----------------------------------------------------------------------------------------
echo '    <div class="row mx-1">'
echo '      <div class="input-group '$COLUMN2_1'">'
echo '        <select class="custom-select custom-select-sm" name="SELECTION">'
echo '          <option value="'$FIRST'">'$FIRST'</option>'

	            for LOG in $LOGS
	            do
	                [ "$LOG" = "$SELECTION" ] && SEL=" selected" || SEL=""
	                LOGNAME=$(echo ${LOG:4} | sed -e 's/.log//' -e 's/[._]/ /g')
	                echo '                    <option value="'$LOG'"'$SEL'>'$LOGNAME'</option>'
	            done

echo '        </select>'
echo '      </div>'
pcp_incr_id
echo '      <div class="'$COLUMN2_2'">'
echo '        <p>Select log file(s) to show&nbsp;&nbsp;'
echo '          <a type="button" data-toggle="collapse" data-target="#dt'$ID'">'$HELPBADGE'</a>'
echo '        </p>'
echo '        <div id="dt'$ID'" class="'$COLLAPSE'">'
echo '          <p>Log files are generated by visiting the various diagnostics pages.</p>'
echo '          <p>Log files prefixed with "slimserver" are LMS log files (LMS needs to be on).</p>'
echo '          <p><b>Note:</b> Log files are temporary, they are not preserved after a reboot.</p>'
echo '        </div>'
echo '      </div>'
echo '    </div>'
#----------------------------------------------------------------------------------------
if [ "$FIRST" = "All" ]; then
	echo '    <div class="row mx-1">'
	echo '      <div class="col-2 mx-1 mb-3">'
	echo '        <button class="'$BUTTON'" type="submit" name="ACTION" value="Show">Show</button>'
	echo '      </div>'
	echo '    </div>'
fi
#----------------------------------------------------------------------------------------
echo '  </form>'
pcp_border_end
#----------------------------------------------------------------------------------------

#------------------------------------------Log text area---------------------------------
pcp_log_show() {
	pcp_hr
	if [ "$SELECTION" = "All" ]; then
		for LOG in $LOGS
		do
			pcp_textarea "$LOG" 'cat ${LOGDIR}/$LOG | sed "s///g" | sed "s/\x0d//g" | sed -r "s/\[([0-9]{1,2}(;[0-9]{1,2}?)?)?[m|K]//g"' 250
		done
	else
		pcp_textarea "$SELECTION" 'cat ${LOGDIR}/$SELECTION | sed "s///g" | sed "s/\x0d//g" | sed -r "s/\[([0-9]{1,2}(;[0-9]{1,2}?)?)?[m|K]//g"' 250
	fi

	if [ ! "$SELECTION" = "All" ]; then
		LOG=${LOGDIR}/${SELECTION}
		[ $MODE -ge $MODE_PLAYER ] && pcp_pastebin_button $SELECTION
	fi
}
[ "$ACTION" = "Show" ] && pcp_log_show
#----------------------------------------------------------------------------------------

pcp_html_end