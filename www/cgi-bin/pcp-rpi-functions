#!/bin/sh
# pcp-rpi-functions
# These are the common Raspberry Pi functions used by piCorePlayer.

# Version: 6.0.0 2020-03-01

pcp_debug_log "$0 - Running pcp-rpi-functions..."

#========================================================================================
# Determine revisions and features of Raspberry Pi
#----------------------------------------------------------------------------------------
# References:
#   https://github.com/raspberrypi/documentation/blob/master/hardware/raspberrypi/revision-codes/README.md
#----------------------------------------------------------------------------------------
pcp_rpi_revision() {
	awk -F: '/^Revision/ { print $2 }' /proc/cpuinfo | sed 's/ //g'
}

pcp_rpi_details() {
	case $(pcp_rpi_revision) in
		#=======================================================================
		# Old-style revision codes
		#-----------------------------------------------------------------------
		# Code   Type     Model         Revision     RAM           Reboot
		#-----------------------------------------------------------------------
		*Beta)   TYPE=1;  MODEL=B;      PCBREV=Beta; MEMORY=256;   RB_DELAY=60;;

		*0002)   TYPE=1;  MODEL=B;      PCBREV=1.0;  MEMORY=256;   RB_DELAY=60;;
		*0003)   TYPE=1;  MODEL=B;      PCBREV=1.0;  MEMORY=256;   RB_DELAY=60;;
		*0004)   TYPE=1;  MODEL=B;      PCBREV=2.0;  MEMORY=256;   RB_DELAY=60;;
		*0005)   TYPE=1;  MODEL=B;      PCBREV=2.0;  MEMORY=256;   RB_DELAY=60;;
		*0006)   TYPE=1;  MODEL=B;      PCBREV=2.0;  MEMORY=256;   RB_DELAY=60;;
		*0007)   TYPE=1;  MODEL=A;      PCBREV=2.0;  MEMORY=256;   RB_DELAY=60;;
		*0008)   TYPE=1;  MODEL=A;      PCBREV=2.0;  MEMORY=256;   RB_DELAY=60;;
		*0009)   TYPE=1;  MODEL=A;      PCBREV=2.0;  MEMORY=256;   RB_DELAY=60;;
		*000d)   TYPE=1;  MODEL=B;      PCBREV=2.0;  MEMORY=512;   RB_DELAY=60;;
		*000e)   TYPE=1;  MODEL=B;      PCBREV=2.0;  MEMORY=512;   RB_DELAY=60;;
		*000f)   TYPE=1;  MODEL=B;      PCBREV=2.0;  MEMORY=512;   RB_DELAY=60;;
		*0010)   TYPE=1;  MODEL=B+;     PCBREV=1.2;  MEMORY=512;   RB_DELAY=60;;
		*0011)   TYPE=1;  MODEL=CM;     PCBREV=1.0;  MEMORY=512;   RB_DELAY=60;;
		*0012)   TYPE=1;  MODEL=A+;     PCBREV=1.1;  MEMORY=256;   RB_DELAY=60;;
		*0013)   TYPE=1;  MODEL=B+;     PCBREV=1.2;  MEMORY=512;   RB_DELAY=60;;
		*0014)   TYPE=1;  MODEL=CM;     PCBREV=1.0;  MEMORY=512;   RB_DELAY=60;;
		*0015)   TYPE=1;  MODEL=A+;     PCBREV=1.1;  MEMORY=256;   RB_DELAY=60;;

		#=======================================================================
		# New-style revision codes
		#-----------------------------------------------------------------------
		# Code   Type     Model         Revision     RAM           Reboot
		#-----------------------------------------------------------------------
		*900021) TYPE=1;  MODEL=A+;     PCBREV=1.1;  MEMORY=512;   RB_DELAY=60;;
		*900032) TYPE=1;  MODEL=B+;     PCBREV=1.2;  MEMORY=512;   RB_DELAY=60;;
		*900092) TYPE=0;  MODEL=ZERO;   PCBREV=1.2;  MEMORY=512;   RB_DELAY=50;;
		*900093) TYPE=0;  MODEL=ZERO;   PCBREV=1.3;  MEMORY=512;   RB_DELAY=50;;
		*9000c1) TYPE=0;  MODEL=ZERO-W; PCBREV=1.1;  MEMORY=512;   RB_DELAY=50;;
		*9020e0) TYPE=3;  MODEL=3A+;    PCBREV=1.0;  MEMORY=512;   RB_DELAY=35;;
		*920092) TYPE=0;  MODEL=ZERO;   PCBREV=1.2;  MEMORY=512;   RB_DELAY=50;;
		*920093) TYPE=0;  MODEL=ZERO;   PCBREV=1.3;  MEMORY=512;   RB_DELAY=50;;
		*900061) TYPE=1;  MODEL=CM;     PCBREV=1.1;  MEMORY=512;   RB_DELAY=60;;

		*a01040) TYPE=2;  MODEL=2B;     PCBREV=1.0;  MEMORY=1024;  RB_DELAY=40;;
		*a01041) TYPE=2;  MODEL=2B;     PCBREV=1.1;  MEMORY=1024;  RB_DELAY=40;;
		*a02082) TYPE=3;  MODEL=3B;     PCBREV=1.2;  MEMORY=1024;  RB_DELAY=40;;
		*a020a0) TYPE=3;  MODEL=CM3;    PCBREV=1.0;  MEMORY=1024;  RB_DELAY=40;;
		*a020d3) TYPE=3;  MODEL=3B+;    PCBREV=1.3;  MEMORY=1024;  RB_DELAY=35;;
		*a21041) TYPE=2;  MODEL=2B;     PCBREV=1.1;  MEMORY=1024;  RB_DELAY=40;;
		*a22042) TYPE=2;  MODEL=2B;     PCBREV=1.2;  MEMORY=1024;  RB_DELAY=40;;
		*a22082) TYPE=3;  MODEL=3B;     PCBREV=1.2;  MEMORY=1024;  RB_DELAY=40;;
		*a220a0) TYPE=3;  MODEL=CM3;    PCBREV=1.0;  MEMORY=1024;  RB_DELAY=40;;
		*a32082) TYPE=3;  MODEL=3B;     PCBREV=1.2;  MEMORY=1024;  RB_DELAY=40;;
		*a52082) TYPE=3;  MODEL=3B;     PCBREV=1.2;  MEMORY=1024;  RB_DELAY=40;;
		*a22083) TYPE=3;  MODEL=3B;     PCBREV=1.3;  MEMORY=1024;  RB_DELAY=40;;
		*a02100) TYPE=3;  MODEL=CM3+;   PCBREV=1.0;  MEMORY=1024;  RB_DELAY=35;;
		*a03111) TYPE=4;  MODEL=4B;     PCBREV=1.1;  MEMORY=1024;  RB_DELAY=30;;
		*b03111) TYPE=4;  MODEL=4B;     PCBREV=1.1;  MEMORY=2048;  RB_DELAY=30;;
		*b03112) TYPE=4;  MODEL=4B;     PCBREV=1.2;  MEMORY=2048;  RB_DELAY=30;;
		*c03111) TYPE=4;  MODEL=4B;     PCBREV=1.1;  MEMORY=4096;  RB_DELAY=30;;
		*c03112) TYPE=4;  MODEL=4B;     PCBREV=1.2;  MEMORY=4096;  RB_DELAY=30;;

		*)       TYPE=99; MODEL=?;      PCBREV=?;    MEMORY=?;     RB_DELAY=60;;
	esac

	case "${MODEL}${PCBREV}" in
		B1.0)  HARDWARE=BCM2708; ETHER=1; USB=2; LED=5; P2PINS=1; HOLES=0; PIN3=0; PIN5=1; PIN13=21; I2C=0; P5=0; P6=0;;
		B1+)   HARDWARE=BCM2708; ETHER=1; USB=2; LED=5; P2PINS=0; HOLES=0; PIN3=0; PIN5=1; PIN13=21; I2C=0; P5=0; P6=0;;
		B2.0)  HARDWARE=BCM2708; ETHER=1; USB=2; LED=5; P2PINS=0; HOLES=2; PIN3=1; PIN5=2; PIN13=27; I2C=1; P5=8; P6=2;;
		A2.0)  HARDWARE=BCM2708; ETHER=0; USB=1; LED=2; P2PINS=0; HOLES=2; PIN3=1; PIN5=2; PIN13=27; I2C=1; P5=8; P6=2;;
		B+*)   HARDWARE=BCM2708; ETHER=1; USB=4; LED=2; P2PINS=0; HOLES=4; PIN3=X; PIN5=X; PIN13=X;  I2C=X; P5=X; P6=X;;
		CM3*)  HARDWARE=BCM2710; ETHER=1; USB=2; LED=2; P2PINS=0; HOLES=4; PIN3=X; PIN5=X; PIN13=X;  I2C=X; P5=X; P6=X;;
		CM*)   HARDWARE=BCM2708; ETHER=0; USB=0; LED=X; P2PINS=0; HOLES=0; PIN3=X; PIN5=X; PIN13=X;  I2C=X; P5=X; P6=X;;
		A+*)   HARDWARE=BCM2708; ETHER=0; USB=1; LED=2; P2PINS=0; HOLES=4; PIN3=1; PIN5=2; PIN13=X;  I2C=X; P5=X; P6=X;;
		2B1.2) HARDWARE=BCM2710; ETHER=1; USB=4; LED=2; P2PINS=0; HOLES=4; PIN3=X; PIN5=X; PIN13=X;  I2C=X; P5=X; P6=X;;
		2B1*)  HARDWARE=BCM2709; ETHER=1; USB=4; LED=2; P2PINS=0; HOLES=4; PIN3=X; PIN5=X; PIN13=X;  I2C=X; P5=X; P6=X;;
		ZERO*) HARDWARE=BCM2708; ETHER=0; USB=1; LED=2; P2PINS=0; HOLES=4; PIN3=X; PIN5=X; PIN13=X;  I2C=X; P5=X; P6=X;;
		3B+*)  HARDWARE=BCM2710; ETHER=1; USB=4; LED=2; P2PINS=0; HOLES=4; PIN3=X; PIN5=X; PIN13=X;  I2C=X; P5=X; P6=X;;
		3B*)   HARDWARE=BCM2710; ETHER=1; USB=4; LED=2; P2PINS=0; HOLES=4; PIN3=X; PIN5=X; PIN13=X;  I2C=X; P5=X; P6=X;;
		3A*)   HARDWARE=BCM2710; ETHER=0; USB=1; LED=2; P2PINS=0; HOLES=4; PIN3=X; PIN5=X; PIN13=X;  I2C=X; P5=X; P6=X;;
		4B*)   HARDWARE=BCM2711; ETHER=1; USB=4; LED=2; P2PINS=0; HOLES=4; PIN3=X; PIN5=X; PIN13=X;  I2C=X; P5=X; P6=X;;
		*)     HARDWARE=X;       ETHER=X; USB=X; LED=X; P2PINS=X; HOLES=X; PIN3=X; PIN5=X; PIN13=X;  I2C=X; P5=X; P6=X;;
	esac
}

pcp_pb_get() {
	echo $1 | tr a-zA-Z n-za-mN-ZA-M
}

#========================================================================================
# Type
#----------------------------------------------------------------------------------------
pcp_rpi_is_rpi0() {
	pcp_rpi_details
	[ $TYPE -eq 0 ] && echo 0 || echo 1
}

pcp_rpi_is_rpi1() {
	pcp_rpi_details
	[ $TYPE -eq 1 ] && echo 0 || echo 1
}

pcp_rpi_is_rpi2() {
	pcp_rpi_details
	[ $TYPE -eq 2 ] && echo 0 || echo 1
}

pcp_rpi_is_rpi3() {
	pcp_rpi_details
	[ $TYPE -eq 3 ] && echo 0 || echo 1
}

pcp_rpi_is_rpi4() {
	pcp_rpi_details
	[ $TYPE -eq 4 ] && echo 0 || echo 1
}

pcp_rpi_type() {
	pcp_rpi_details
	echo $TYPE
}

#========================================================================================
# Model
#----------------------------------------------------------------------------------------
pcp_rpi_model() {
	pcp_rpi_details
	echo $MODEL
}

pcp_rpi_model_unknown() {
	pcp_rpi_details
	[ "$MODEL" = "?" ] && echo 0 || echo 1
}

# The shortname is a unique identifier intended to be used with pastebin uploading
pcp_rpi_shortname() {
	pcp_rpi_details
	if [ "$MODEL" = "A" ] || [ "$MODEL" = "A+" ] || [ "$MODEL" = "ZERO" ] || [ "$MODEL" = "ZERO-W" ] || [ "$MODEL" = "3A+" ]; then
		SHORTMAC=$(pcp_wlan0_mac_address)
	else
		SHORTMAC=$(pcp_eth0_mac_address)
	fi
	SHORTMAC=$(echo $SHORTMAC | sed 's/://g')
	echo "pCP-$(pcp_rpi_model)-${SHORTMAC:6}"
}

pcp_rpi_is_model_A() {
	pcp_rpi_details
	[ "$MODEL" = "A" ] && echo 0 || echo 1
}

pcp_rpi_is_model_B() {
	pcp_rpi_details
	[ "$MODEL" = "B" ] && echo 0 || echo 1
}

pcp_rpi_is_model_B_rev_1() {
	pcp_rpi_details
	([ "$MODEL" = "B" ] && [ "$PCBREV" = "1" ]) && echo 0 || echo 1
}

pcp_rpi_is_model_B_rev_2() {
	pcp_rpi_details
	([ "$MODEL" = "B" ] && [ "$PCBREV" = "2" ]) && echo 0 || echo 1
}

pcp_rpi_is_model_Bplus() {
	pcp_rpi_details
	[ "$MODEL" = "B+" ] && echo 0 || echo 1
}

pcp_rpi_is_model_CM() {
	pcp_rpi_details
	[ "$MODEL" = "CM" ] && echo 0 || echo 1
}

pcp_rpi_is_model_CM3() {
	pcp_rpi_details
	[ "$MODEL" = "CM3" ] && echo 0 || echo 1
}

pcp_rpi_is_model_CM3plus() {
	pcp_rpi_details
	[ "$MODEL" = "CM3+" ] && echo 0 || echo 1
}

pcp_rpi_is_model_Aplus() {
	pcp_rpi_details
	[ "$MODEL" = "A+" ] && echo 0 || echo 1
}

pcp_rpi_is_model_2B() {
	pcp_rpi_details
	[ "$MODEL" = "2B" ] && echo 0 || echo 1
}

pcp_rpi_is_model_zero() {
	pcp_rpi_details
	[ "$MODEL" = "ZERO" ] && echo 0 || echo 1
}

pcp_rpi_is_model_zerow() {
	pcp_rpi_details
	[ "$MODEL" = "ZERO-W" ] && echo 0 || echo 1
}

pcp_rpi_is_model_3B() {
	pcp_rpi_details
	[ "$MODEL" = "3B" ] && echo 0 || echo 1
}

pcp_rpi_is_model_3Bplus() {
	pcp_rpi_details
	[ "$MODEL" = "3B+" ] && echo 0 || echo 1
}

pcp_rpi_is_model_3Aplus() {
	pcp_rpi_details
	[ "$MODEL" = "3A+" ] && echo 0 || echo 1
}

pcp_rpi_is_model_4B() {
	pcp_rpi_details
	[ "$MODEL" = "4B" ] && echo 0 || echo 1
}

PB101=$(cat $PB100)
set -- $PB101
PB102=$(pcp_pb_get $1)
PB103=$(pcp_pb_get $2)
PB104=$(pcp_pb_get $3)

#========================================================================================
# Revision
#----------------------------------------------------------------------------------------
pcp_rpi_pcb_revision() {
	pcp_rpi_details
	echo $PCBREV
}

pcp_rpi_is_hat() {
	pcp_rpi_details
	[ "$HOLES" = "4" ] && echo 0 || echo 1
}

pcp_rpi_has_inbuilt_wifi() {
	pcp_rpi_details
	if ([ "$MODEL" = "ZERO-W" ] || [ "$MODEL" = "3B" ] || [ "$MODEL" = "3B+" ] || [ "$MODEL" = "3A+" ] || [ "$MODEL" = "4B" ]); then
		echo 0
	else
		echo 1
	fi
}

pcp_rpi_warranty() {
	case $(pcp_rpi_revision) in
		100* | 2*)
			echo 0
		;;
		*)
			echo 1
		;;
	esac
}

#========================================================================================
# Memory
#----------------------------------------------------------------------------------------
pcp_rpi_memory() {
	pcp_rpi_details
	echo $MEMORY
}

pcp_rpi_is_memory_256() {
	pcp_rpi_details
	[ "$MEMORY" = "256" ] && echo 0 || echo 1
}

pcp_rpi_is_memory_512() {
	pcp_rpi_details
	[ "$MEMORY" = "512" ] && echo 0 || echo 1
}

pcp_rpi_is_memory_1024() {
	pcp_rpi_details
	[ "$MEMORY" = "1024" ] && echo 0 || echo 1
}

pcp_rpi_is_memory_2048() {
	pcp_rpi_details
	[ "$MEMORY" = "2048" ] && echo 0 || echo 1
}

pcp_rpi_is_memory_4096() {
	pcp_rpi_details
	[ "$MEMORY" = "4096" ] && echo 0 || echo 1
}


API_DEV_KEY=$PB102
API_USER_NAME=$PB103
API_USER_PASSWORD=$PB104

#========================================================================================
# Temperature
#
# Options:
#	mode
#	policy
#	passive
#	temp
#	trip_point_0_temp
#	trip_point_0_type
#	type
#	uevent
#----------------------------------------------------------------------------------------
pcp_rpi_thermal() {
	cat /sys/devices/virtual/thermal/thermal_zone0/$1
}

pcp_rpi_thermal_temp() {
	TEMP_IN_DEGRESS=$(pcp_rpi_thermal "temp")
	if [ "$1" = "degrees" ]; then
		printf "%.f" $((($TEMP_IN_DEGRESS+500)/1000))
	else
		printf "%s" $TEMP_IN_DEGRESS
	fi
}
