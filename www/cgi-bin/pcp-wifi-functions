# Version: 3.5.1 2018-03-30
#	Original. GE.

#========================================================================================
# Wifi extensions.
#----------------------------------------------------------------------------------------
#
# piCorePlayer.dep
# |
# |--pcp.tcz.dep
# |   |
# |   |--pcp-base.tcz
# |   |--alsa.tcz.dep
# |   |   |
# |   |   \--libasound.tcz.dep
# |   |       |
# |   |       \alsa-modules-KERNEL.tcz.
# |   |
# |   |--alsa-utils.tcz.dep
# |   |   |
# |   |   |--libasound.tcz->
# |   |   \--ncurses.tcz.
# |   |
# |   |--busybox-httpd.tcz
# |   |--openssh.tcz.dep
# |   |   |
# |   |   |--libedit.tcz.dep
# |   |   |   |
# |   |   |   \--ncurses.tcz.
# |   |   |
# |   |   \--openssl.tcz.dep
# |   |       |
# |   |       \--ca-certificates.tcz.
# |   |
# |   |--dialog.tcz.dep
# |   |   |
# |   |   \--ncurses.tcz.
# |   |
# |   \--pcp-squeezelite.tcz.dep
# |       |
# |       |--pcp-libmpg123.tcz.dep
# |       |   |
# |       |   \--libasound.tcz.dep
# |       |       |
# |       |       \--alsa-modules-KERNEL.tcz.
# |       |
# |       |--pcp-libfaad2.tcz
# |       |--pcp-libsoxr.tcz
# |       |--pcp-libmad.tcz
# |       |--pcp-libvorbis.tcz
# |       |   |
# |       |   \--pcp-libogg.tcz.
# |       |
# |       |--pcp-libflac.tcz
# |       |   |
# |       |   \--pcp-libogg.tcz.
# |       |
# |       |--libasound.tcz
# |       |   |
# |       |   \--alsa-modules-KERNEL.tcz.
# |       |
# |       \--wiringpi.tcz.
# |
# |--firmware-atheros.tcz
# |--firmware-brcmwifi.tcz
# |--firmware-ralinkwifi.tcz
# |--firmware-rtlwifi.tcz
# |--firmware-rpi3-wireless.tcz
# |
# \--wifi.tcz.dep
#     |
#     |--wireless_tools.tcz.dep
#     |   |
#     |   |--libiw.tcz
#     |   \--wireless-KERNEL.tcz
#     |
#     \--wpa_supplicant.tcz.dep
#         |
#         |--libnl.tcz
#         |--openssl.tcz.dep
#         |   |
#         |   \--ca-certificates.tcz.
#         |
#         \--readline.tcz
#             |
#             \--ncurses.tcz.

#cat piCorePlayer.dep
# pcp.tcz
# firmware-atheros.tcz
# firmware-brcmwifi.tcz
# firmware-rpi3-wireless.tcz
# firmware-ralinkwifi.tcz
# firmware-rtlwifi.tcz
# wifi.tcz

pcp_wifi_load_extensions() {
	echo "${GREEN}Loading wifi extensions.${NORMAL}"
	sudo -u tc tce-load -i wireless_tools.tcz >/dev/null 2>&1
	[ $? -eq 0 ] && echo "${YELLOW}  Wireless tools loaded.${NORMAL}" || echo "${RED}  Wireless tools load error.${NORMAL}"
	sudo -u tc tce-load -i wpa_supplicant.tcz >/dev/null 2>&1
	[ $? -eq 0 ] && echo -n "${YELLOW}  wpa supplicant loaded.${NORMAL}" || echo -n "${RED}  wpa supplicant load error.${NORMAL}"
	echo "${GREEN} Done.${NORMAL}"
}

pcp_wifi_load_firmware() {
	echo "${GREEN}Loading wifi firmware.${NORMAL}"
	sudo -u tc tce-load -i wifi.tcz >/dev/null 2>&1
	[ $? -eq 0 ] && echo "${YELLOW}  Wifi modules loaded.${NORMAL}" || echo "${RED}  Wifi modules load error.${NORMAL}"
	sudo -u tc tce-load -i firmware-atheros.tcz >/dev/null 2>&1
	[ $? -eq 0 ] && echo "${YELLOW}  Atheros firmware loaded.${NORMAL}" || echo "${RED}  Atheros firmware load error.${NORMAL}"
	sudo -u tc tce-load -i firmware-brcmwifi.tcz >/dev/null 2>&1
	[ $? -eq 0 ] && echo "${YELLOW}  Broadcom USB firmware loaded.${NORMAL}" || echo "${RED}  Broadcom USB firmware load error.${NORMAL}"
	sudo -u tc tce-load -i firmware-ralinkwifi.tcz >/dev/null 2>&1
	[ $? -eq 0 ] && echo "${YELLOW}  Ralink firmware loaded.${NORMAL}" || echo "${RED}  Ralink firmware load error.${NORMAL}"
	sudo -u tc tce-load -i firmware-rtlwifi.tcz >/dev/null 2>&1
	[ $? -eq 0 ] && echo "${YELLOW}  Realtek firmware loaded.${NORMAL}" || echo "${RED}  Realtek firmware load error.${NORMAL}"
	sudo -u tc tce-load -i firmware-rpi3-wireless.tcz >/dev/null 2>&1
	[ $? -eq 0 ] && echo "${YELLOW}  RPi Broadcom firmware loaded.${NORMAL}" || echo "${RED}  RPi Broadcom firmware load error.${NORMAL}"
	echo "${GREEN} Done.${NORMAL}"
}

pcp_wifi_default_wpa_supplicant() {
cat <<EOF > /opt/wpa_supplicant.conf
ctrl_interface=/var/run/wpa_supplicant
ctrl_interface_group=staff
update_config=1
EOF
}

pcp_wifi_get_passphrase() {
	if [ -f /opt/wpa_supplicant.conf ]; then
		#RESULT=$(grep psk= /opt/wpa_supplicant.conf)
		RESULT=$(sed -n 's/psk=\([0-9a-f]\{64\}$\)/\1/ p' /opt/wpa_supplicant.conf)
		[ x"" = x"$RESULT" ] && echo "None" || echo $RESULT
	fi
}