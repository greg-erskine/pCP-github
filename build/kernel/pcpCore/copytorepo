#!/bin/bash

#################################################################################
#
#	copytorepo
#
#	copy selected extensions to the local kernel repo for upload to sourceforge
#
# ANSI COLORS
CRE="$(echo -e '\r\033[K')"
RED="$(echo -e '\033[1;31m')"
GREEN="$(echo -e '\033[1;32m')"
YELLOW="$(echo -e '\033[1;33m')"
BLUE="$(echo -e '\033[1;34m')"
MAGENTA="$(echo -e '\033[1;35m')"
CYAN="$(echo -e '\033[1;36m')"
WHITE="$(echo -e '\033[1;37m')"
NORMAL="$(echo -e '\033[0;39m')"

if [ ! -d armv6 -a ! -d armv7 ]; then
	echo
	echo "Start from within the pcpCore directory"
	echo "Usage .$0" >&2
	exit 1
fi

BASEWD=$(pwd)
ARMV6_REPO="/home/paul/git/sourceforge/tcz_repo/9.x/armv6/tcz"
ARMV7_REPO="/home/paul/git/sourceforge/tcz_repo/9.x/armv7/tcz"

SELECTED_ARCH="armv6 armv7"
for RPIARCH in $SELECTED_ARCH; do
	cd $RPIARCH/extensions
	echo "Select the ${YELLOW}$RPIARCH${NORMAL} extensions to copy to REPO."
	options=($(ls -1 -r --sort=time))
	unset choices

	menu() {
		echo "Avaliable options for ${YELLOW}$RPIARCH${NORMAL}:"
		for i in ${!options[@]}; do
			[[ "${choices[i]}" ]] && C=${YELLOW} || C=${NORMAL}
			printf "%3d%s) %s\n" $((i+1)) "${choices[i]:- }" "$C${options[i]}${NORMAL}"
		done
		[[ "$msg" ]] && echo "$msg"; :
	}

	prompt="Check an option (again to uncheck, ENTER when done): "
	while menu && read -rp "$prompt" num && [[ "$num" ]]; do
		[[ "$num" != *[![:digit:]]* ]] &&
		(( num > 0 && num <= ${#options[@]} )) ||
		{ msg="Invalid option: $num"; continue; }
		((num--)); msg="${options[num]} was ${choices[num]:+un}checked"
		[[ "${choices[num]}" ]] && choices[num]="" || choices[num]="+"
	done

	printf "You selected"; msg=" nothing"
	for i in ${!options[@]}; do 
		[[ "${choices[i]}" ]] && { printf " %s" "${options[i]}"; msg=""; }
	done
	echo
	echo "$msg"
	echo "*****************************************************************"
	echo

	for i in ${!options[@]}; do 
		if [[ "${choices[i]}" ]]; then
			cd "${options[i]}"
			DESTDIR=$(eval echo \${${RPIARCH^^}_REPO})
			echo "DESTDIR=$DESTDIR"
			cp -f *.tcz* $DESTDIR
			cd ..
		fi
	done
	cd $BASEWD
done

echo DONE
